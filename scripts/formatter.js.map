{"version":3,"sources":["formatter.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","pattern","DELIM_SIZE","regexp","RegExp","getMatches","matches","match","exec","push","parse","info","inpts","chars","pLength","length","mCount","iCount","i","processMatch","val","valLength","j","charAt","index","mLength","utils","uAgent","navigator","userAgent","extend","destObj","arguments","key","addChars","str","pos","substr","removeChars","start","end","isBetween","num","bounds","sort","a","b","addListener","el","evt","handler","addEventListener","attachEvent","preventDefault","returnValue","getClip","clipboardData","getData","window","getMatchingKey","which","keyCode","keys","k","isDelKeyDown","isDelKeyPress","isSpecialKeyPress","isModifier","ctrlKey","altKey","metaKey","forEach","collection","callback","thisArg","hasOwnProperty","len","call","patternMatcher","parseMatcher","matcher","patternSpec","matchers","patterns","patternStr","matcherStr","parsedPattern","regExpMatcher","getPattern","input","matchedIndex","test","undefined","inptSel","get","selectionStart","begin","selectionEnd","range","document","selection","createRange","parentElement","inputRange","createTextRange","endRange","value","moveToBookmark","getBookmark","collapse","compareEndPoints","moveStart","moveEnd","set","setSelectionRange","focus","select","formatter","defaults","persistent","repeat","placeholder","inptRegs","Formatter","opts","self","TypeError","_specFromSinglePattern","_updatePattern","hldrs","_keyDown","_keyPress","_paste","_processKey","blur","_focus","addInptType","chr","reg","prototype","resetPattern","sel","delta","_removeChars","newPattern","isSpecial","String","fromCharCode","setTimeout","isAfterStart","isFirstChar","delKey","ignoreCaret","Math","abs","_delete","_formatValue","_nextPos","newPos","_validateInpts","_addChars","shift","curChar","curHldr","inptType","isBadType","isInvalid","inBounds","focusStart","_addChar"],"mappings":"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","file":"formatter.js","sourcesContent":["/*!\n * v0.1.5\n * Copyright (c) 2014 First Opinion\n * formatter.js is open sourced under the MIT license.\n *\n * thanks to digitalBush/jquery.maskedinput for some of the trickier\n * keycode handling\n */ \n\n//\n// Uses Node, AMD or browser globals to create a module. This example creates\n// a global even when AMD is used. This is useful if you have some scripts\n// that are loaded by an AMD loader, but they still want access to globals.\n// If you do not need to export a global for the AMD case,\n// see returnExports.js.\n//\n// If you want something that will work in other stricter CommonJS environments,\n// or if you need to create a circular dependency, see commonJsStrictGlobal.js\n//\n// Defines a module \"returnExportsGlobal\" that depends another module called\n// \"b\". Note that the name of the module is implied by the file name. It is\n// best if the file name and the exported global have matching names.\n//\n// If the 'b' module also uses this type of boilerplate, then\n// in the browser, it will create a global .b that is used below.\n//\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Formatter'] = factory();\n  }\n}(this, function () {\n\n\n/*\n * pattern.js\n *\n * Utilities to parse str pattern and return info\n *\n */\nvar pattern = function () {\n    // Define module\n    var pattern = {};\n    // Match information\n    var DELIM_SIZE = 4;\n    // Our regex used to parse\n    var regexp = new RegExp('{{([^}]+)}}', 'g');\n    //\n    // Helper method to parse pattern str\n    //\n    var getMatches = function (pattern) {\n      // Populate array of matches\n      var matches = [], match;\n      while (match = regexp.exec(pattern)) {\n        matches.push(match);\n      }\n      return matches;\n    };\n    //\n    // Create an object holding all formatted characters\n    // with corresponding positions\n    //\n    pattern.parse = function (pattern) {\n      // Our obj to populate\n      var info = {\n          inpts: {},\n          chars: {}\n        };\n      // Pattern information\n      var matches = getMatches(pattern), pLength = pattern.length;\n      // Counters\n      var mCount = 0, iCount = 0, i = 0;\n      // Add inpts, move to end of match, and process\n      var processMatch = function (val) {\n        var valLength = val.length;\n        for (var j = 0; j < valLength; j++) {\n          info.inpts[iCount] = val.charAt(j);\n          iCount++;\n        }\n        mCount++;\n        i += val.length + DELIM_SIZE - 1;\n      };\n      // Process match or add chars\n      for (i; i < pLength; i++) {\n        if (mCount < matches.length && i === matches[mCount].index) {\n          processMatch(matches[mCount][1]);\n        } else {\n          info.chars[i - mCount * DELIM_SIZE] = pattern.charAt(i);\n        }\n      }\n      // Set mLength and return\n      info.mLength = i - mCount * DELIM_SIZE;\n      return info;\n    };\n    // Expose\n    return pattern;\n  }();\n/*\n * utils.js\n *\n * Independent helper methods (cross browser, etc..)\n *\n */\nvar utils = function () {\n    // Define module\n    var utils = {};\n    // Useragent info for keycode handling\n    var uAgent = typeof navigator !== 'undefined' ? navigator.userAgent : null;\n    //\n    // Shallow copy properties from n objects to destObj\n    //\n    utils.extend = function (destObj) {\n      for (var i = 1; i < arguments.length; i++) {\n        for (var key in arguments[i]) {\n          destObj[key] = arguments[i][key];\n        }\n      }\n      return destObj;\n    };\n    //\n    // Add a given character to a string at a defined pos\n    //\n    utils.addChars = function (str, chars, pos) {\n      return str.substr(0, pos) + chars + str.substr(pos, str.length);\n    };\n    //\n    // Remove a span of characters\n    //\n    utils.removeChars = function (str, start, end) {\n      return str.substr(0, start) + str.substr(end, str.length);\n    };\n    //\n    // Return true/false is num false between bounds\n    //\n    utils.isBetween = function (num, bounds) {\n      bounds.sort(function (a, b) {\n        return a - b;\n      });\n      return num > bounds[0] && num < bounds[1];\n    };\n    //\n    // Helper method for cross browser event listeners\n    //\n    utils.addListener = function (el, evt, handler) {\n      return typeof el.addEventListener !== 'undefined' ? el.addEventListener(evt, handler, false) : el.attachEvent('on' + evt, handler);\n    };\n    //\n    // Helper method for cross browser implementation of preventDefault\n    //\n    utils.preventDefault = function (evt) {\n      return evt.preventDefault ? evt.preventDefault() : evt.returnValue = false;\n    };\n    //\n    // Helper method for cross browser implementation for grabbing\n    // clipboard data\n    //\n    utils.getClip = function (evt) {\n      if (evt.clipboardData) {\n        return evt.clipboardData.getData('Text');\n      }\n      if (window.clipboardData) {\n        return window.clipboardData.getData('Text');\n      }\n    };\n    //\n    // Loop over object and checking for matching properties\n    //\n    utils.getMatchingKey = function (which, keyCode, keys) {\n      // Loop over and return if matched.\n      for (var k in keys) {\n        var key = keys[k];\n        if (which === key.which && keyCode === key.keyCode) {\n          return k;\n        }\n      }\n    };\n    //\n    // Returns true/false if k is a del keyDown\n    //\n    utils.isDelKeyDown = function (which, keyCode) {\n      var keys = {\n          'backspace': {\n            'which': 8,\n            'keyCode': 8\n          },\n          'delete': {\n            'which': 46,\n            'keyCode': 46\n          }\n        };\n      return utils.getMatchingKey(which, keyCode, keys);\n    };\n    //\n    // Returns true/false if k is a del keyPress\n    //\n    utils.isDelKeyPress = function (which, keyCode) {\n      var keys = {\n          'backspace': {\n            'which': 8,\n            'keyCode': 8,\n            'shiftKey': false\n          },\n          'delete': {\n            'which': 0,\n            'keyCode': 46\n          }\n        };\n      return utils.getMatchingKey(which, keyCode, keys);\n    };\n    // //\n    // // Determine if keydown relates to specialKey\n    // //\n    // utils.isSpecialKeyDown = function (which, keyCode) {\n    //   var keys = {\n    //     'tab': { 'which': 9, 'keyCode': 9 },\n    //     'enter': { 'which': 13, 'keyCode': 13 },\n    //     'end': { 'which': 35, 'keyCode': 35 },\n    //     'home': { 'which': 36, 'keyCode': 36 },\n    //     'leftarrow': { 'which': 37, 'keyCode': 37 },\n    //     'uparrow': { 'which': 38, 'keyCode': 38 },\n    //     'rightarrow': { 'which': 39, 'keyCode': 39 },\n    //     'downarrow': { 'which': 40, 'keyCode': 40 },\n    //     'F5': { 'which': 116, 'keyCode': 116 }\n    //   };\n    //   return utils.getMatchingKey(which, keyCode, keys);\n    // };\n    //\n    // Determine if keypress relates to specialKey\n    //\n    utils.isSpecialKeyPress = function (which, keyCode) {\n      var keys = {\n          'tab': {\n            'which': 0,\n            'keyCode': 9\n          },\n          'enter': {\n            'which': 13,\n            'keyCode': 13\n          },\n          'end': {\n            'which': 0,\n            'keyCode': 35\n          },\n          'home': {\n            'which': 0,\n            'keyCode': 36\n          },\n          'leftarrow': {\n            'which': 0,\n            'keyCode': 37\n          },\n          'uparrow': {\n            'which': 0,\n            'keyCode': 38\n          },\n          'rightarrow': {\n            'which': 0,\n            'keyCode': 39\n          },\n          'downarrow': {\n            'which': 0,\n            'keyCode': 40\n          },\n          'F5': {\n            'which': 116,\n            'keyCode': 116\n          }\n        };\n      return utils.getMatchingKey(which, keyCode, keys);\n    };\n    //\n    // Returns true/false if modifier key is held down\n    //\n    utils.isModifier = function (evt) {\n      return evt.ctrlKey || evt.altKey || evt.metaKey;\n    };\n    //\n    // Iterates over each property of object or array.\n    //\n    utils.forEach = function (collection, callback, thisArg) {\n      if (collection.hasOwnProperty('length')) {\n        for (var index = 0, len = collection.length; index < len; index++) {\n          if (callback.call(thisArg, collection[index], index, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        for (var key in collection) {\n          if (collection.hasOwnProperty(key)) {\n            if (callback.call(thisArg, collection[key], key, collection) === false) {\n              break;\n            }\n          }\n        }\n      }\n    };\n    // Expose\n    return utils;\n  }();\n/*\n* pattern-matcher.js\n*\n* Parses a pattern specification and determines appropriate pattern for an\n* input string\n*\n*/\nvar patternMatcher = function (pattern, utils) {\n    //\n    // Parse a matcher string into a RegExp. Accepts valid regular\n    // expressions and the catchall '*'.\n    // @private\n    //\n    var parseMatcher = function (matcher) {\n      if (matcher === '*') {\n        return /.*/;\n      }\n      return new RegExp(matcher);\n    };\n    //\n    // Parse a pattern spec and return a function that returns a pattern\n    // based on user input. The first matching pattern will be chosen.\n    // Pattern spec format:\n    // Array [\n    //  Object: { Matcher(RegExp String) : Pattern(Pattern String) },\n    //  ...\n    // ]\n    function patternMatcher(patternSpec) {\n      var matchers = [], patterns = [];\n      // Iterate over each pattern in order.\n      utils.forEach(patternSpec, function (patternMatcher) {\n        // Process single property object to obtain pattern and matcher.\n        utils.forEach(patternMatcher, function (patternStr, matcherStr) {\n          var parsedPattern = pattern.parse(patternStr), regExpMatcher = parseMatcher(matcherStr);\n          matchers.push(regExpMatcher);\n          patterns.push(parsedPattern);\n          // Stop after one iteration.\n          return false;\n        });\n      });\n      var getPattern = function (input) {\n        var matchedIndex;\n        utils.forEach(matchers, function (matcher, index) {\n          if (matcher.test(input)) {\n            matchedIndex = index;\n            return false;\n          }\n        });\n        return matchedIndex === undefined ? null : patterns[matchedIndex];\n      };\n      return {\n        getPattern: getPattern,\n        patterns: patterns,\n        matchers: matchers\n      };\n    }\n    // Expose\n    return patternMatcher;\n  }(pattern, utils);\n/*\n * inpt-sel.js\n *\n * Cross browser implementation to get and set input selections\n *\n */\nvar inptSel = function () {\n    // Define module\n    var inptSel = {};\n    //\n    // Get begin and end positions of selected input. Return 0's\n    // if there is no selectiion data\n    //\n    inptSel.get = function (el) {\n      // If normal browser return with result\n      if (typeof el.selectionStart === 'number') {\n        return {\n          begin: el.selectionStart,\n          end: el.selectionEnd\n        };\n      }\n      // Uh-Oh. We must be IE. Fun with TextRange!!\n      var range = document.selection.createRange();\n      // Determine if there is a selection\n      if (range && range.parentElement() === el) {\n        var inputRange = el.createTextRange(), endRange = el.createTextRange(), length = el.value.length;\n        // Create a working TextRange for the input selection\n        inputRange.moveToBookmark(range.getBookmark());\n        // Move endRange begin pos to end pos (hence endRange)\n        endRange.collapse(false);\n        // If we are at the very end of the input, begin and end\n        // must both be the length of the el.value\n        if (inputRange.compareEndPoints('StartToEnd', endRange) > -1) {\n          return {\n            begin: length,\n            end: length\n          };\n        }\n        // Note: moveStart usually returns the units moved, which \n        // one may think is -length, however, it will stop when it\n        // gets to the begin of the range, thus giving us the\n        // negative value of the pos.\n        return {\n          begin: -inputRange.moveStart('character', -length),\n          end: -inputRange.moveEnd('character', -length)\n        };\n      }\n      //Return 0's on no selection data\n      return {\n        begin: 0,\n        end: 0\n      };\n    };\n    //\n    // Set the caret position at a specified location\n    //\n    inptSel.set = function (el, pos) {\n      // Normalize pos\n      if (typeof pos !== 'object') {\n        pos = {\n          begin: pos,\n          end: pos\n        };\n      }\n      // If normal browser\n      if (el.setSelectionRange) {\n        el.focus();\n        el.setSelectionRange(pos.begin, pos.end);\n      } else if (el.createTextRange) {\n        var range = el.createTextRange();\n        range.collapse(true);\n        range.moveEnd('character', pos.end);\n        range.moveStart('character', pos.begin);\n        range.select();\n      }\n    };\n    // Expose\n    return inptSel;\n  }();\n/*\n * formatter.js\n *\n * Class used to format input based on passed pattern\n *\n */\nvar formatter = function (patternMatcher, inptSel, utils) {\n    // Defaults\n    var defaults = {\n        persistent: false,\n        repeat: false,\n        placeholder: ' '\n      };\n    // Regexs for input validation\n    var inptRegs = {\n        '9': /[0-9]/,\n        'a': /[A-Za-z]/,\n        '*': /[A-Za-z0-9]/\n      };\n    //\n    // Class Constructor - Called with new Formatter(el, opts)\n    // Responsible for setting up required instance variables, and\n    // attaching the event listener to the element.\n    //\n    function Formatter(el, opts) {\n      // Cache this\n      var self = this;\n      // Make sure we have an element. Make accesible to instance\n      self.el = el;\n      if (!self.el) {\n        throw new TypeError('Must provide an existing element');\n      }\n      // Merge opts with defaults\n      self.opts = utils.extend({}, defaults, opts);\n      // 1 pattern is special case\n      if (typeof self.opts.pattern !== 'undefined') {\n        self.opts.patterns = self._specFromSinglePattern(self.opts.pattern);\n        delete self.opts.pattern;\n      }\n      // Make sure we have valid opts\n      if (typeof self.opts.patterns === 'undefined') {\n        throw new TypeError('Must provide a pattern or array of patterns');\n      }\n      self.patternMatcher = patternMatcher(self.opts.patterns);\n      // Upate pattern with initial value\n      self._updatePattern();\n      // Init values\n      self.hldrs = {};\n      self.focus = 0;\n      // Add Listeners\n      utils.addListener(self.el, 'keydown', function (evt) {\n        self._keyDown(evt);\n      });\n      utils.addListener(self.el, 'keypress', function (evt) {\n        self._keyPress(evt);\n      });\n      utils.addListener(self.el, 'paste', function (evt) {\n        self._paste(evt);\n      });\n      // Persistence\n      if (self.opts.persistent) {\n        // Format on start\n        self._processKey('', false);\n        self.el.blur();\n        // Add Listeners\n        utils.addListener(self.el, 'focus', function (evt) {\n          self._focus(evt);\n        });\n        utils.addListener(self.el, 'click', function (evt) {\n          self._focus(evt);\n        });\n        utils.addListener(self.el, 'touchstart', function (evt) {\n          self._focus(evt);\n        });\n      }\n    }\n    //\n    // @public\n    // Add new char\n    //\n    Formatter.addInptType = function (chr, reg) {\n      inptRegs[chr] = reg;\n    };\n    //\n    // @public\n    // Apply the given pattern to the current input without moving caret.\n    //\n    Formatter.prototype.resetPattern = function (str) {\n      // Update opts to hold new pattern\n      this.opts.patterns = str ? this._specFromSinglePattern(str) : this.opts.patterns;\n      // Get current state\n      this.sel = inptSel.get(this.el);\n      this.val = this.el.value;\n      // Init values\n      this.delta = 0;\n      // Remove all formatted chars from val\n      this._removeChars();\n      this.patternMatcher = patternMatcher(this.opts.patterns);\n      // Update pattern\n      var newPattern = this.patternMatcher.getPattern(this.val);\n      this.mLength = newPattern.mLength;\n      this.chars = newPattern.chars;\n      this.inpts = newPattern.inpts;\n      // Format on start\n      this._processKey('', false, true);\n    };\n    //\n    // @private\n    // Determine correct format pattern based on input val\n    //\n    Formatter.prototype._updatePattern = function () {\n      // Determine appropriate pattern\n      var newPattern = this.patternMatcher.getPattern(this.val);\n      // Only update the pattern if there is an appropriate pattern for the value.\n      // Otherwise, leave the current pattern (and likely delete the latest character.)\n      if (newPattern) {\n        // Get info about the given pattern\n        this.mLength = newPattern.mLength;\n        this.chars = newPattern.chars;\n        this.inpts = newPattern.inpts;\n      }\n    };\n    //\n    // @private\n    // Handler called on all keyDown strokes. All keys trigger\n    // this handler. Only process delete keys.\n    //\n    Formatter.prototype._keyDown = function (evt) {\n      // The first thing we need is the character code\n      var k = evt.which || evt.keyCode;\n      // If delete key\n      if (k && utils.isDelKeyDown(evt.which, evt.keyCode)) {\n        // Process the keyCode and prevent default\n        this._processKey(null, k);\n        return utils.preventDefault(evt);\n      }\n    };\n    //\n    // @private\n    // Handler called on all keyPress strokes. Only processes\n    // character keys (as long as no modifier key is in use).\n    //\n    Formatter.prototype._keyPress = function (evt) {\n      // The first thing we need is the character code\n      var k, isSpecial;\n      // Mozilla will trigger on special keys and assign the the value 0\n      // We want to use that 0 rather than the keyCode it assigns.\n      k = evt.which || evt.keyCode;\n      isSpecial = utils.isSpecialKeyPress(evt.which, evt.keyCode);\n      // Process the keyCode and prevent default\n      if (!utils.isDelKeyPress(evt.which, evt.keyCode) && !isSpecial && !utils.isModifier(evt)) {\n        this._processKey(String.fromCharCode(k), false);\n        return utils.preventDefault(evt);\n      }\n    };\n    //\n    // @private\n    // Handler called on paste event.\n    //\n    Formatter.prototype._paste = function (evt) {\n      // Process the clipboard paste and prevent default\n      this._processKey(utils.getClip(evt), false);\n      return utils.preventDefault(evt);\n    };\n    //\n    // @private\n    // Handle called on focus event.\n    //\n    Formatter.prototype._focus = function () {\n      // Wrapped in timeout so that we can grab input selection\n      var self = this;\n      setTimeout(function () {\n        // Grab selection\n        var selection = inptSel.get(self.el);\n        // Char check\n        var isAfterStart = selection.end > self.focus, isFirstChar = selection.end === 0;\n        // If clicked in front of start, refocus to start\n        if (isAfterStart || isFirstChar) {\n          inptSel.set(self.el, self.focus);\n        }\n      }, 0);\n    };\n    //\n    // @private\n    // Using the provided key information, alter el value.\n    //\n    Formatter.prototype._processKey = function (chars, delKey, ignoreCaret) {\n      // Get current state\n      this.sel = inptSel.get(this.el);\n      this.val = this.el.value;\n      // Init values\n      this.delta = 0;\n      // If chars were highlighted, we need to remove them\n      if (this.sel.begin !== this.sel.end) {\n        this.delta = -1 * Math.abs(this.sel.begin - this.sel.end);\n        this.val = utils.removeChars(this.val, this.sel.begin, this.sel.end);\n      } else if (delKey && delKey === 46) {\n        this._delete();\n      } else if (delKey && this.sel.begin - 1 >= 0) {\n        // Always have a delta of at least -1 for the character being deleted.\n        this.val = utils.removeChars(this.val, this.sel.end - 1, this.sel.end);\n        this.delta -= 1;\n      } else if (delKey) {\n        return true;\n      }\n      // If the key is not a del key, it should convert to a str\n      if (!delKey) {\n        // Add char at position and increment delta\n        this.val = utils.addChars(this.val, chars, this.sel.begin);\n        this.delta += chars.length;\n      }\n      // Format el.value (also handles updating caret position)\n      this._formatValue(ignoreCaret);\n    };\n    //\n    // @private\n    // Deletes the character in front of it\n    //\n    Formatter.prototype._delete = function () {\n      // Adjust focus to make sure its not on a formatted char\n      while (this.chars[this.sel.begin]) {\n        this._nextPos();\n      }\n      // As long as we are not at the end\n      if (this.sel.begin < this.val.length) {\n        // We will simulate a delete by moving the caret to the next char\n        // and then deleting\n        this._nextPos();\n        this.val = utils.removeChars(this.val, this.sel.end - 1, this.sel.end);\n        this.delta = -1;\n      }\n    };\n    //\n    // @private\n    // Quick helper method to move the caret to the next pos\n    //\n    Formatter.prototype._nextPos = function () {\n      this.sel.end++;\n      this.sel.begin++;\n    };\n    //\n    // @private\n    // Alter element value to display characters matching the provided\n    // instance pattern. Also responsible for updating\n    //\n    Formatter.prototype._formatValue = function (ignoreCaret) {\n      // Set caret pos\n      this.newPos = this.sel.end + this.delta;\n      // Remove all formatted chars from val\n      this._removeChars();\n      // Switch to first matching pattern based on val\n      this._updatePattern();\n      // Validate inputs\n      this._validateInpts();\n      // Add formatted characters\n      this._addChars();\n      // Set value and adhere to maxLength\n      this.el.value = this.val.substr(0, this.mLength);\n      // Set new caret position\n      if (typeof ignoreCaret === 'undefined' || ignoreCaret === false) {\n        inptSel.set(this.el, this.newPos);\n      }\n    };\n    //\n    // @private\n    // Remove all formatted before and after a specified pos\n    //\n    Formatter.prototype._removeChars = function () {\n      // Delta shouldn't include placeholders\n      if (this.sel.end > this.focus) {\n        this.delta += this.sel.end - this.focus;\n      }\n      // Account for shifts during removal\n      var shift = 0;\n      // Loop through all possible char positions\n      for (var i = 0; i <= this.mLength; i++) {\n        // Get transformed position\n        var curChar = this.chars[i], curHldr = this.hldrs[i], pos = i + shift, val;\n        // If after selection we need to account for delta\n        pos = i >= this.sel.begin ? pos + this.delta : pos;\n        val = this.val.charAt(pos);\n        // Remove char and account for shift\n        if (curChar && curChar === val || curHldr && curHldr === val) {\n          this.val = utils.removeChars(this.val, pos, pos + 1);\n          shift--;\n        }\n      }\n      // All hldrs should be removed now\n      this.hldrs = {};\n      // Set focus to last character\n      this.focus = this.val.length;\n    };\n    //\n    // @private\n    // Make sure all inpts are valid, else remove and update delta\n    //\n    Formatter.prototype._validateInpts = function () {\n      // Loop over each char and validate\n      for (var i = 0; i < this.val.length; i++) {\n        // Get char inpt type\n        var inptType = this.inpts[i];\n        // Checks\n        var isBadType = !inptRegs[inptType], isInvalid = !isBadType && !inptRegs[inptType].test(this.val.charAt(i)), inBounds = this.inpts[i];\n        // Remove if incorrect and inbounds\n        if ((isBadType || isInvalid) && inBounds) {\n          this.val = utils.removeChars(this.val, i, i + 1);\n          this.focusStart--;\n          this.newPos--;\n          this.delta--;\n          i--;\n        }\n      }\n    };\n    //\n    // @private\n    // Loop over val and add formatted chars as necessary\n    //\n    Formatter.prototype._addChars = function () {\n      if (this.opts.persistent) {\n        // Loop over all possible characters\n        for (var i = 0; i <= this.mLength; i++) {\n          if (!this.val.charAt(i)) {\n            // Add placeholder at pos\n            this.val = utils.addChars(this.val, this.opts.placeholder, i);\n            this.hldrs[i] = this.opts.placeholder;\n          }\n          this._addChar(i);\n        }\n        // Adjust focus to make sure its not on a formatted char\n        while (this.chars[this.focus]) {\n          this.focus++;\n        }\n      } else {\n        // Avoid caching val.length, as they may change in _addChar.\n        for (var j = 0; j <= this.val.length; j++) {\n          // When moving backwards there are some race conditions where we\n          // dont want to add the character\n          if (this.delta <= 0 && j === this.focus) {\n            return true;\n          }\n          // Place character in current position of the formatted string.\n          this._addChar(j);\n        }\n      }\n    };\n    //\n    // @private\n    // Add formattted char at position\n    //\n    Formatter.prototype._addChar = function (i) {\n      // If char exists at position\n      var chr = this.chars[i];\n      if (!chr) {\n        return true;\n      }\n      // If chars are added in between the old pos and new pos\n      // we need to increment pos and delta\n      if (utils.isBetween(i, [\n          this.sel.begin - 1,\n          this.newPos + 1\n        ])) {\n        this.newPos++;\n        this.delta++;\n      }\n      // If character added before focus, incr\n      if (i <= this.focus) {\n        this.focus++;\n      }\n      // Updateholder\n      if (this.hldrs[i]) {\n        delete this.hldrs[i];\n        this.hldrs[i + 1] = this.opts.placeholder;\n      }\n      // Update value\n      this.val = utils.addChars(this.val, chr, i);\n    };\n    //\n    // @private\n    // Create a patternSpec for passing into patternMatcher that\n    // has exactly one catch all pattern.\n    //\n    Formatter.prototype._specFromSinglePattern = function (patternStr) {\n      return [{ '*': patternStr }];\n    };\n    // Expose\n    return Formatter;\n  }(patternMatcher, inptSel, utils);\n\n\nreturn formatter;\n\n\n\n}));"]}